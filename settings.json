{
  "temperature": {
    "min": 0.0,
    "max": 2.0,
    "default": 0.8,
    "step": 0.1,
    "help": "What sampling temperature to use, between 0 and 2. Higher values like 0.8 will make the output more random, while lower values like 0.2 will make it more focused and deterministic. We generally recommend altering this or top_p but not both."
  },
  "top_p": {
    "min": 0.0,
    "max": 1.0,
    "default": 0.95,
    "step": 0.01,
    "help": "An alternative to sampling with temperature, called nucleus sampling, where the model considers the results of the tokens with top_p probability mass. So 0.1 means only the tokens comprising the top 10% probability mass are considered. We generally recommend altering this or temperature but not both. Limit the next token selection to a subset of tokens with a cumulative probability above a threshold P."
  },
  "frequency_penalty": {
    "min": -2.0,
    "max": 2.0,
    "default": 0.0,
    "step": 0.1,
    "help": "Number between -2.0 and 2.0. Positive values penalize new tokens based on their existing frequency in the text so far, decreasing the model's likelihood to repeat the same line verbatim."
  },
  "presence_penalty": {
    "min": -2.0,
    "max": 2.0,
    "default": 0.0,
    "step": 0.1,
    "help": "Number between -2.0 and 2.0. Positive values penalize new tokens based on whether they appear in the text so far, increasing the model's likelihood to talk about new topics."
  },
  "seed": {
    "default": -1,
    "help": "If specified, the system will make a best effort to sample deterministically, such that repeated requests with the same seed and parameters should return the same result. Determinism is not guaranteed, and you should refer to the system_fingerprint response parameter to monitor changes in the backend. Set the RNG seed (-1 for random)."
  },
  "logit_bias": {
    "default": "[]",
    "help": "Modify the likelihood of specified tokens appearing in the completion. Accepts a JSON object that maps tokens (specified by their token ID in the tokenizer) to an associated bias value from -100 to 100. Mathematically, the bias is added to the logits generated by the model prior to sampling. The exact effect will vary per model, but values between -1 and 1 should decrease or increase likelihood of selection; values like -100 or 100 should result in a ban or exclusive selection of the relevant token. For example, use \"logit_bias\": [[15043,1.0]] to increase the likelihood of the token 'Hello', or \"logit_bias\": [[15043,-1.0]] to decrease its likelihood. Setting the value to false, \"logit_bias\": [[15043,false]] ensures that the token Hello is never produced."
  },
  "logprobs": {
    "default": false,
    "help": "Whether to return log probabilities of the output tokens or not. If true, returns the log probabilities of each output token returned in the content of message."
  },
  "top_logprobs": {
    "min": 0,
    "max": 20,
    "default": null,
    "help": "An integer between 0 and 20 specifying the number of most likely tokens to return at each token position, each with an associated log probability. logprobs must be set to true if this parameter is used."
  },
  "max_tokens": {
    "min": -1,
    "max": 131072,
    "default": 131072,
    "help": "The maximum number of tokens that can be generated in the chat completion.The total length of input tokens and generated tokens is limited by the model's context length."
  },
  "n": {
    "min": 1,
    "max": 10,
    "default": 1,
    "help": "How many chat completion choices to generate for each input message."
  },
  "stop": {
    "default": ["<|end_of_text|>", "<|eot_id|>"],
    "help": "Up to 4 sequences where the API will stop generating further tokens. Specify a JSON array of stopping strings. These words will not be included in the completion, so make sure to add them to the prompt for the next iteration."
  },
  "stream": {
    "default": true,
    "help": "It allows receiving each predicted token in real-time instead of waiting for the completion to finish. Tokens will be sent as data-only server-sent events as they become available, with the stream terminated by a data: [DONE] message. Receive each predicted token in real-time."
  }
}
